{"version":3,"sources":["Global/KEY.js","Global/API.js","Context/ProviderMovie.jsx","Context/ProviderDetail.jsx","Context/ProviderVideo.jsx","Component/CardMovie.jsx","Component/MovieSearchButton/SearchButton.jsx","Component/DetailCard/DetailCard.jsx","Component/SimilarMovie/SimilarMovie.jsx","Component/Video/Video.jsx","Screen/MovieDetail/ScreenMovieDetail.jsx","Screen/Initial.jsx","App.jsx","index.js"],"names":["HOST","KEY","PATH_IMAGEN","getMovies","a","page","url","axios","get","data","console","log","getMovieById","id","getVideoById","idmovie","getSearchMovie","search","getSimilarMovies","idMovie","MovieContext","createContext","ProviderMovie","children","useState","movies","setMovies","setPage","setSearch","useEffect","then","res","results","Provider","value","DetailsContext","ProviderDetail","similar","setSimilar","setId","VideoContext","ProviderVideo","video","setVideo","idv","setIdv","map","site","key","CardMovie","poster_path","detailStatus","moveiId","image","src","alt","onClick","e","showDetail","MovieSearchButton","useContext","className","placeholder","onChange","target","DetailCard","title","release_date","overview","vote_count","genres","item","name","SimilarMovie","imageUrl","Video","frameBorder","allow","allowFullScreen","ScreenMovieDetail","idmov","movie","setMovie","slice","Initial","props","showHideDetail","setShowHideDetail","idMovieDetail","setidMovieDetail","App","history","useHistory","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9cf1d024.chunk.js","sourcesContent":["  \nexport const HOST = 'https://api.themoviedb.org/3'\nexport const KEY ='c121b7372197a2e97a0890a06d833906';\nexport const PATH_IMAGEN = 'https://image.tmdb.org/t/p'","import  {HOST, KEY } from './KEY'\nimport axios from 'axios';\n\nexport const getMovies = async(page=1) => {\n  const url = `${HOST}/movie/popular?api_key=${KEY}&page=${page}&language=es-ES`;\n  try {\n    const data = await axios.get(url);\n    console.log(data)\n       return data\n    } catch (error) {\n      console.log(error)\n  }\n}\n  \nexport const getMovieById = async(id) => {\n  const url = `${HOST}/movie/${id}?api_key=${KEY}&language=es-ES`;\n  try {\n    const data = await axios.get(url);\n    return data\n  } catch (error) {\n    console.log(error)\n  }\n}\n  \nexport const getVideoById = async(idmovie) => {\n  const url = `${HOST}/movie/${idmovie}/videos?api_key=${KEY}`;\n  try {\n    const data = await axios.get(url);\n    return data\n  } catch (error) {\n    console.log(error)\n  }\n}\n  \nexport const getSearchMovie = async(search) => {\n  const url = `${HOST}/search/movie?api_key=${KEY}&query=${search}&language=es-ES`\n  try {\n    const data = await axios.get(url);\n    return data\n  } catch (error) {\n    console.log(error)\n  }\n}\n  \nexport const  getSimilarMovies = async(idMovie) => {\n  const url = `${HOST}/movie/${idMovie}/similar?api_key=${KEY}&language=es-EN`;\n  try {\n    const data = await axios.get(url);\n    return data\n  } catch (error) {\n    console.log(error)\n  }\n}\n  ","import React, { useEffect, useState, createContext } from 'react'\nimport { getMovies, getSearchMovie } from '../Global/API'\n\nexport const MovieContext = createContext()\n\nconst ProviderMovie = ( { children }) => {\n\n    const [ movies, setMovies ] = useState([])\n    const [ page, setPage ] = useState(1)\n    const [ search, setSearch ] = useState(null);\n    \n    useEffect(() => {\n        getMovies(page).then((res) => {\n            setMovies(res.data.results) \n        })\n    },[page])\n\n    useEffect(() => {\n        if(search != null){\n            getSearchMovie(search).then((res) => {\n                if (res){\n                    if(res.data.results){\n                    setMovies(res.data.results);   \n                }}\n            });\n        }   \n    }, [search]);\n\n    return (\n        <MovieContext.Provider\n            value = {{\n                movies,\n                setMovies,\n                page,\n                setPage,\n                search, \n                setSearch\n            }}\n        >\n            { children }\n        </MovieContext.Provider>\n    )\n}\n\nexport default ProviderMovie","import React,{ useState, useEffect, createContext } from 'react'\nimport { getSimilarMovies } from '../Global/API';\n\nexport const DetailsContext = createContext();\n\nconst ProviderDetail = ({children}) => {\n\n    const [similar, setSimilar] = useState([])\n    const [id, setId] = useState(null)\n\n    useEffect(() => {\n        if(id !== null){\n            getSimilarMovies(id).then((res) => {\n                setSimilar(res.data.results);\n            });\n        }\n    }, [id])\n  \n    return (\n        <DetailsContext.Provider\n            value={{\n                id,\n                setId,\n                similar,\n                setSimilar\n            }}\n        >\n            {children}\n        </DetailsContext.Provider>\n    )\n}\n\nexport default ProviderDetail","import React,{ useState, createContext, useEffect } from 'react'\nimport { getVideoById } from '../Global/API';\n\nexport const VideoContext = createContext();\n\nconst ProviderVideo = ({ children }) => {\n    \n    const [video, setVideo] = useState([])\n    const [idv, setIdv] = useState(null)\n    \n    useEffect(() => {\n        if(idv !== null){\n            getVideoById(idv).then((res)=>{\n                console.log(res.data)\n                let idv=null;\n                if(res.data.results){\n                    res.data.results.map((video)=>{\n                        \n                        if(video.site==='YouTube' && !idv){\n                            idv = video.key;\n                        }\n                        setVideo(idv)\n                    })\n                }\n            })\n        }\n    }, [idv])\n \n    return (\n        <VideoContext.Provider\n            value={{\n                video,\n                setVideo,\n                idv,\n                setIdv,\n            }}\n        >\n            { children }\n        </VideoContext.Provider>\n    )\n}\nexport default ProviderVideo","import React from 'react'\nimport { PATH_IMAGEN } from '../Global/KEY'\n\nconst CardMovie = ({id, poster_path, detailStatus, moveiId}) => {\n\n    const image =`${PATH_IMAGEN}/w400${poster_path}`\n    const showDetail = (id) => {\n        console.log(id);\n        detailStatus(\"true\")\n        moveiId(id)\n      };\n\n    return (\n       <>\n        <img src = { image } alt={`Img_${id}`} onClick={(e)=>showDetail(id)}/>\n            </>\n    )\n}\n\nexport default CardMovie","import React, { useContext } from 'react'\nimport { MovieContext } from '../../Context/ProviderMovie'\nimport './SearchButton.css'\n\n\nconst MovieSearchButton = () => {\n    \n    const { setSearch } = useContext(MovieContext)\n    \n    const handleInputOnchange = (e) => {\n        console.log(e.target.value)\n        setSearch(e.target.value)\n    }\n    \n    return ( \n        <input \n        className=\"inputSearch border\"\n        placeholder = \"Buscar película\" \n        onChange = { handleInputOnchange } \n        />\n        )\n    }\n    \n    export default MovieSearchButton","import React from 'react'\nimport { PATH_IMAGEN } from '../../Global/KEY'\nimport './DetailCard.css'\n\nconst DetailCard = ({title, release_date, overview, vote_count, genres, poster_path}) => {\n\n    let image =\"\";\n    if ( poster_path ){\n        image =`${PATH_IMAGEN}/w400${poster_path}`\n    }\n\n    return (\n        <>\n        <div className=\"row-detail\">\n        \n            <div className=\"column-detail left-detail\">\n            <img src = {image} alt=\"\"/>\n              </div>\n\n              <div className=\"column-detail right-detail\">\n              <h3 className=\"titleMgBotton\">{title}</h3>\n              <div className=\"release\">{release_date}</div>\n              <div className=\"release\">Votos: {vote_count}</div>\n              \n              <div>\n\n              <div className=\"release\">\n              <h4 className=\"titleBold genero\">GÉNERO</h4>\n                      {genres && genres.map((item) => {\n                        return(\n                            <span className=\"generoColor\" key={item.id} >{item.name} / </span>\n                        )\n                      })} \n                </div>\n              </div>\n              <div className=\"release\">\n                  <h4 className=\"titleBold\">VISTA GENERAL</h4>\n                  {overview}\n                  </div>\n              <span>\n\n              </span>\n              </div>\n\n        </div>\n        </>\n    )\n}\n\nexport default DetailCard","import React from 'react'\nimport { PATH_IMAGEN } from '../../Global/KEY'\nimport './SimilarMovie.css'\nconst SimilarMovie = ({ idMovie, poster_path }) => {\n   \n    const imageUrl =`${PATH_IMAGEN}/w400${poster_path ? poster_path : null}`\n    \n    return (\n            <>\n                <img src= {imageUrl} className=\"imgSimilar\" alt=\"\"/>\n            </>\n    )\n}\nexport default SimilarMovie","import React, { useContext } from 'react'\nimport { VideoContext } from '../../Context/ProviderVideo'\n\nconst Video = () => {\n    const { video } = useContext(VideoContext)\n    const url = `https://www.youtube.com/embed/${video}`\n    return (\n        <iframe\n            src= { url}\n            title=\"YouTube video player\" \n            frameBorder=\"0\"\n            allow=\"accelerometer; \n            autoplay; clipboard-write;\n            encrypted-media; gyroscope; \n            picture-in-picture\" \n            allowFullScreen> \n        </iframe>\n    )\n}\n\nexport default Video","import React, { useState, useContext, useEffect } from 'react'\nimport { DetailsContext } from '../../Context/ProviderDetail';\nimport { VideoContext } from '../../Context/ProviderVideo';\nimport DetailCard from '../../Component/DetailCard/DetailCard';\nimport SimilarMovie from '../../Component/SimilarMovie/SimilarMovie';\nimport { getMovieById } from '../../Global/API';\nimport Video from '../../Component/Video/Video';\nimport './ScreenMovieDetail.css'\n\nconst ScreenMovieDetail = (idmov) => {\n    \n    let id  = idmov.idmov;\n    const {  setIdv } = useContext(VideoContext)\n    const { setId, similar } = useContext(DetailsContext)\n    const [ movie, setMovie ] = useState([])\n    \n    const { title, release_date, overview, vote_count, genres, poster_path } = movie;\n    \n    useEffect(() => {\n        getMovieById(id).then((res) => {\n            setMovie(res.data)\n            setId(id)\n            setIdv(id)\n        });  \n    }, [id])\n    \n    return (\n        \n        <div className = \"containerPrincipal\">\n        <DetailCard\n        title = {title}\n        release_date = {release_date}\n        overview = {overview} \n        vote_count = {vote_count}\n        genres = {genres}\n        poster_path = {poster_path}\n        />\n        <h4 className=\"titleBold\">VISTA GENERAL</h4>\n        <Video />\n        { similar ? \n            <>\n            <div className = \"release\">\n            <h4 className=\"titleBold\">SIMILARES</h4>\n            </div>\n            <div className=\"containerSimilar\" >\n            \n            {   \n                similar.slice(0, 3).map((item) => {\n                    \n                    const {id,title,poster_path, release_date} = item;\n                    \n                    return (\n                        <span key={id} >\n                        <SimilarMovie\n                        idMovie={id} \n                        title={title} \n                        poster_path={poster_path}\n                        release_date={release_date}\n                        />\n                        </span>\n                        \n                        )\n                    })  \n                } \n                </div> \n                </>  \n                : null }\n                \n                </div>\n                \n                )\n            }\n            \n            export default ScreenMovieDetail","import React, { useState, useContext } from 'react'\nimport CardMovie from '../Component/CardMovie'\nimport MovieSearchButton from '../Component/MovieSearchButton/SearchButton'\nimport { MovieContext } from '../Context/ProviderMovie'\nimport ScreenMovieDetail from './MovieDetail/ScreenMovieDetail';\n\nconst Initial = (props) => {\n    \n    const { movies, setPage } = useContext(MovieContext)\n    const [showHideDetail, setShowHideDetail]=useState(\"false\")\n    const [idMovieDetail, setidMovieDetail]=useState('')\n    console.log(props)\n    \n    const showDetail=(e)=>{\n        setShowHideDetail(e);\n    }\n    console.log(movies)\n    return (\n        <>\n        <div className = {showHideDetail===\"false\"? \"column border left_initial\": \"column border left\"}>\n        <MovieSearchButton/>\n        <div className = \"containerImage\">\n        <div>\n        <div className=\"cards\">\n        {   movies.map((item) => {\n            let { id,title,poster_path, release_date }= item;\n            \n            return (\n                <span key={id}>\n                <CardMovie \n                id={id}\n                title={title} \n                poster_path={poster_path}\n                release_date={release_date}\n                detailStatus={e=>showDetail(e)}\n                moveiId={e=>setidMovieDetail(e)}\n\n                />\n                </span>\n                )\n                \n            })  \n        }  \n        </div>\n        </div>\n        \n        </div>\n        \n        </div>\n        <div>\n        { showHideDetail === \"false\" ? \"\":<div className=\"column border right\">\n              <ScreenMovieDetail idmov={idMovieDetail}/>\n            </div> }\n        </div>\n        </>\n        )\n        \n    }\n    \n    export default Initial","import \"./App.css\";\nimport React from 'react'\nimport { BrowserRouter as Router, Switch, Route, useHistory } from \"react-router-dom\";\nimport ProviderMovie from './Context/ProviderMovie';\nimport ProviderDetail from './Context/ProviderDetail';\nimport ProviderVideo from './Context/ProviderVideo';\nimport Initial from './Screen/Initial';\n\nconst App = () => {\n\n  return (\n    <Router history={useHistory}>\n      <ProviderMovie>\n        <ProviderDetail>\n          <ProviderVideo>\n            <Switch>\n              <Route exact path=\"/\">\n                <Initial/>\n              </Route>  \n            </Switch>\n          </ProviderVideo>  \n        </ProviderDetail>\n      </ProviderMovie>\n    </Router>\n  );\n\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}